{ john-program }

/;
--------------------------------------
|                                  P6|
|  Green                             |
|     -------------------------      |
|     |                     P1|      |
|     |         Red           |      |
|     -------------------     |      |
|     |P2   |         P3|     |      |
|     |     |   Green   |     |      |
|     |     |     -------------      |
|     |     |     |P4         |      |
|     |     |     |   Yellow  |      |
|     |     -------------------      |
|     |  Blue           |   P5|      |
|     |                 |     |      |
|     ------------------|     |------|
|     |                       |      |
 -----|         Red           |      |
|     ------------------------       |
|                                    |
|P7                    Blue          |
-------------------------------------|
;/

start-world map.

;; CLASSES
create Map uncolored-pieces.
create Piece number color neighbors.
create Color.

;; OBJECTS

make Piece P1 1 none [ 2, 3, 4, 6 ].
make Piece P2 2 none [ 1, 3, 4, 5, 6 ].
make Piece P3 3 none [ 1, 2, 4 ].
make Piece P4 4 none [ 1, 2, 3, 5, 6 ].
make Piece P5 5 none [ 2, 4, 6, 7 ].
make Piece P6 6 none [ 1, 2, 4, 5, 7 ].
make Piece P7 7 none [ 4, 5, 6 ].
make Map Puzzle (all Piece).
for [ "Red" name, "Blue" name, "Green" name, "Yellow" name ] do make Color each.

;; QUALIFICATIONS (DYNAMIC PROPERTIES)
qualify Number associated-piece the select all Piece by which number = it.

;; ACTIONS
action Map paint Piece Color consequence 
       Piece color = Color and
       its uncolored-pieces = its uncolored-pieces - Piece.
rule Map paint is for every Piece neighbors associated-piece do not each color = Color.

;; GOALS
goal Map colored try for every all Piece do not each color = none.

;; HEURISTICS
action-optimization Map paint dynamically establish Piece = its uncolored-pieces first.

;; VISUALS


;; QUERIES

set-opt max-time-ahead 9.
;set-opt auto-draw Chess.
Puzzle do paint P1 Blue.
Puzzle satisfy colored.

end-world.


